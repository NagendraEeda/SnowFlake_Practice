-- validate the file instead of loading them
-- VALIDATION_MODE = RETURN_N_ROWS | RETURN_ERRORS
-- RETURN_N_ROWS =  Validate & Return specified number of rows. Fails at first error encounters
-- RETURN_ERRORS = Return all errors in Copy Command

CREATE OR REPLACE DATABASE COPY_DB;

CREATE OR REPLACE TABLE COPY_DB.PUBLIC.ORDERS (
    ORDER_ID VARCHAR(30),
    AMOUNT INT,
    PROFIT INT,
    QUANTITY INT,
    CATEGORY VARCHAR(30),
    SUBCATEGORY VARCHAR(30));


CREATE OR REPLACE STAGE MANAGE_DB.EXTERNAL_STAGES.AWS_STAGE_ERROREX
URL = 's3://snowflaketestingbuckets3';
credentials = (aws_key_id = '*****' aws_secret_key='e6mNpF4Z/QTmXQjeWgjfAQn+i1k/xuv4yBfqzXfk');

LIST @MANAGE_DB.EXTERNAL_STAGES.AWS_STAGE_ERROREX;


CREATE OR REPLACE SCHEMA MANAGE_DB.file_formats;

-- Define File Format

CREATE OR REPLACE FILE FORMAT MANAGE_DB.file_formats.ORDER_FILE_FORMAT
TYPE = CSV,
SKIP_HEADER = 1,
FIELD_DELIMITER = ',';

-- Dedscribe 

DESC FILE FORMAT MANAGE_DB.file_formats.ORDER_FILE_FORMAT;

SELECT * FROM COPY_DB.PUBLIC.ORDERS;

COPY INTO  COPY_DB.PUBLIC.ORDERS
FROM @MANAGE_DB.EXTERNAL_STAGES.AWS_STAGE_ERROREX
file_format = (FORMAT_NAME = MANAGE_DB.file_formats.ORDER_FILE_FORMAT)
pattern = ".*Error.*"
VALIDATION_MODE = return_errors;

COPY INTO  COPY_DB.PUBLIC.ORDERS
FROM @MANAGE_DB.EXTERNAL_STAGES.AWS_STAGE_ERROREX
file_format = (FORMAT_NAME = MANAGE_DB.file_formats.ORDER_FILE_FORMAT)
pattern = ".*Error.*"
VALIDATION_MODE = RETURN_5_ROWS;



COPY INTO  COPY_DB.PUBLIC.ORDERS
FROM @MANAGE_DB.EXTERNAL_STAGES.AWS_STAGE_ERROREX
file_format = (FORMAT_NAME = MANAGE_DB.file_formats.ORDER_FILE_FORMAT)
pattern = ".*Error.*"
ON_ERROR = 'CONTINUE';



-----------------****** Rejected Records ********------------------

--- LAST QUERY ID

SELECT LAST_QUERY_ID();

CREATE OR REPLACE TABLE COPY_DB.PUBLIC.ORDERS_REJECTED AS
SELECT REJECTED_RECORD FROM TABLE (RESULT_SCAN(LAST_QUERY_ID()));

SELECT * FROM  COPY_DB.PUBLIC.ORDERS_REJECTED;

CREATE OR REPLACE TABLE COPY_DB.PUBLIC.REJECTED_RECORDS AS
SELECT  
SPLIT_PART(rejected_record,',',1) as ORDER_ID, 
SPLIT_PART(rejected_record,',',2) as AMOUNT, 
SPLIT_PART(rejected_record,',',3) as PROFIT, 
SPLIT_PART(rejected_record,',',4) as QUATNTITY, 
SPLIT_PART(rejected_record,',',5) as CATEGORY, 
SPLIT_PART(rejected_record,',',6) as SUBCATEGORY
FROM ORDERS_REJECTED; 

SELECT * FROM COPY_DB.PUBLIC.REJECTED_RECORDS;
