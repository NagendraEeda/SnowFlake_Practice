// FILE FORMAT

CREATE OR REPLACE FILE FORMAT MANAGE_DB.FILE_FORMATS.SNOWPIPE_FILEFORMAT
    type = csv
    field_delimiter = ','
    skip_header = 1
    null_if = ('NULL','null')
    empty_field_as_null = TRUE;

DESC FILE FORMAT MANAGE_DB.FILE_FORMATS.SNOWPIPE_FILEFORMAT;


// create stage

CREATE OR REPLACE STAGE MANAGE_DB.EXTERNAL_STAGES.SNOWPIPE_STAGE
URL = 'S3://snowflaketestingbuckets3/snowpipe/'
credentials=(aws_key_id='*****' aws_secret_key='e6mNpF4Z/QTmXQjeWgjfAQn+i1k/xuv4yBfqzXfk')
FILE_FORMAT = MANAGE_DB.FILE_FORMATS.SNOWPIPE_FILEFORMAT;

LIST @MANAGE_DB.EXTERNAL_STAGES.SNOWPIPE_STAGE;



// Create table first
CREATE OR REPLACE TABLE OUR_FIRST_DB.PUBLIC.employees (
  id INT,
  first_name STRING,
  last_name STRING,
  email STRING,
  location STRING,
  department STRING
  );

// NORMAL COPY
  
COPY INTO OUR_FIRST_DB.PUBLIC.employees
FROM @MANAGE_DB.EXTERNAL_STAGES.SNOWPIPE_STAGE ;

// SNOWPIPE

CREATE OR REPLACE SCHEMA MANAGE_DB.SNOW_PIPES;

CREATE OR REPLACE PIPE MANAGE_DB.SNOW_PIPES.EMP_PIPE
AUTO_INGEST = TRUE
AS
COPY INTO OUR_FIRST_DB.PUBLIC.employees
FROM @MANAGE_DB.EXTERNAL_STAGES.SNOWPIPE_STAGE;

DESC PIPE MANAGE_DB.SNOW_PIPES.EMP_PIPE;

SELECT * FROM OUR_FIRST_DB.PUBLIC.employees;
TRUNCATE TABLE OUR_FIRST_DB.PUBLIC.employees;

ALTER PIPE MANAGE_DB.SNOW_PIPES.EMP_PIPE REFRESH;

SELECT SYSTEM$PIPE_STATUS('EMP_PIPE');

// Snowpipe error message
SELECT * FROM TABLE(VALIDATE_PIPE_LOAD(
    PIPE_NAME => 'MANAGE_DB.SNOW_PIPES.EMP_PIPE',
    START_TIME => DATEADD(HOUR,-2,CURRENT_TIMESTAMP())));

// COPY command history from table to see error massage

SELECT * FROM TABLE (INFORMATION_SCHEMA.COPY_HISTORY(
   table_name  =>  'OUR_FIRST_DB.PUBLIC.employees',
   START_TIME =>DATEADD(HOUR,-2,CURRENT_TIMESTAMP())));

SHOW PIPES;
