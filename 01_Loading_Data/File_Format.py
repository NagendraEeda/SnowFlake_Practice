// Creating ORDERS ER table

CREATE OR REPLACE TABLE OUR_FIRST_DB.PUBLIC.ORDERS_ER (
    ORDER_ID VARCHAR(30),
    AMOUNT INT,
    PROFIT INT,
    QUANTITY INT,
    CATEGORY VARCHAR(30),
    SUBCATEGORY VARCHAR(30));

    
CREATE OR REPLACE STAGE MANAGE_DB.EXTERNAL_STAGES.AWS_STAGE_ERROREX
URL = 's3://bucketsnowflakes3'
credentials = (aws_key_id = '*****' aws_secret_key='e6mNpF4Z/QTmXQjeWgjfAQn+i1k/xuv4yBfqzXfk');

LIST @MANAGE_DB.EXTERNAL_STAGES.AWS_STAGE_ERROREX;

ALTER STAGE MANAGE_DB.EXTERNAL_STAGES.AWS_STAGE_ERROREX
SET URL = 's3://snowflaketestingbuckets3';

SELECT * FROM OUR_FIRST_DB.PUBLIC.ORDERS_ER;
TRUNCATE TABLE OUR_FIRST_DB.PUBLIC.ORDERS_ER;

CREATE OR REPLACE SCHEMA MANAGE_DB.file_formats;

-- Define File Format

CREATE OR REPLACE FILE FORMAT MANAGE_DB.file_formats.ORDER_FILE_FORMAT
TYPE = CSV,
SKIP_HEADER = 1,
FIELD_DELIMITER = ',';

-- Dedscribe 

DESC FILE FORMAT MANAGE_DB.file_formats.ORDER_FILE_FORMAT;

-- Using File Format Object instead giving manual values

COPY INTO OUR_FIRST_DB.PUBLIC.ORDERS_ER
FROM @MANAGE_DB.EXTERNAL_STAGES.AWS_STAGE_ERROREX
file_format = (FORMAT_NAME = MANAGE_DB.file_formats.ORDER_FILE_FORMAT)
pattern = ".*Error.*"
ON_ERROR = 'CONTINUE';
